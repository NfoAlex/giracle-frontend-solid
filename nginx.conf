server {
  # 3000番ポートでリクエストを待ち受ける
  listen 3000;
  
  # ドキュメントルート（ファイルの配置場所）を指定
  # Dockerfileでコピーしたパスと一致させる
  root /usr/share/nginx/html;
  
  # デフォルトで探すファイル
  index index.html;
  
  # サーバー名（必要に応じて変更）
  server_name giracle-frontend-solid;

  location /api/ {
    # パスの書き換えルール
    # ^/backend/(.*)$ にマッチしたリクエストのパスを /$1 に書き換える
    # 例: /backend/users -> /users
    rewrite ^/api/(.*)$ /$1 break;

    # バックエンドのサービス名とポートにプロキシ
    proxy_pass http://backend:4000;

    # プロキシで一般的に必要とされるヘッダー設定
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  location /ws {
    # バックエンドのサービス名とポートにプロキシ
    proxy_pass http://backend:4000;

    # HTTP/1.1で通信することを指定 (Upgradeに必須)
    proxy_http_version 1.1;
    # "Upgrade"ヘッダーをバックエンドに渡す
    proxy_set_header Upgrade $http_upgrade;
    # "Connection"ヘッダーを"upgrade"に設定して渡す
    proxy_set_header Connection "upgrade";
    # ホスト情報も渡す
    proxy_set_header Host $host;
  }

  # フロントエンド
  location / {
    # try_files: リクエストされたURIのファイルを探し、
    #            なければディレクトリを探し、
    #            それでもなければ /index.html を返す
    # これがSPAのルーティング（例: /about や /users/1）を機能させるための鍵
    try_files $uri $uri/ /index.html;
  }

  # gzip圧縮を有効にして転送量を削減 (推奨)
  gzip on;
  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
}